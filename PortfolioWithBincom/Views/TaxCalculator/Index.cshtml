@model TaxCalculatorModel

@{
    ViewData["Title"] = "UK Tax Calculator";
    Layout = "~/Views/Shared/_Layout.cshtml"; // if you're using a layout
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .calculator-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
    }

    .calculator-card {
        width: 100%;
        max-width: 400px;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.1);
    }

    .calculator-display {
        font-family: 'Courier New', Courier, monospace;
        font-size: 1.5rem;
        background-color: #e9ecef;
        padding: 1rem;
        border-radius: 0.5rem;
        margin-top: 1rem;
        text-align: center;
    }
</style>

<div class="calculator-container">
    <div class="card calculator-card border-danger">
        <div class="card-body">
            <h3 class="card-title text-center text-danger">UK Tax Calculator</h3>

            <form asp-action="Index" method="post" class="mt-4">
                <div class="form-group mb-3">
                    <label asp-for="GrossIncome" class="form-label">Gross Income (£)</label>
                    <input asp-for="GrossIncome" class="form-control" />
                    <span asp-validation-for="GrossIncome" class="text-danger small"></span>
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-outline-danger">Calculate</button>
                </div>
            </form>

            @if (Model.TaxOwed.HasValue)
            {
                <div class="calculator-display mt-4 text-danger">
                    Tax Owed: £@Model.TaxOwed.Value.ToString("N2")
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}